{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-11T08:37:07.506Z",
    "end": "2023-07-11T08:56:35.171Z",
    "duration": 1167665,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "710ab604-b653-48a9-97b8-11d2335dd295",
      "title": "",
      "fullFile": "tests/e2e/specs/swap.spec.js",
      "file": "tests/e2e/specs/swap.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
          "title": "Swap",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Connect to Metamask",
              "fullTitle": "Swap Connect to Metamask",
              "timedOut": null,
              "duration": 62319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard'); // MetaMask connection\ncy.get(connectToWallet).click();\ncy.get(connectToMetamask).contains(\"Metamask\").click();\ncy.get(connectWallet).click();\ncy.switchToMetamaskWindow();\ncy.acceptMetamaskAccess().should(\"be.true\");\ncy.switchToCypressWindow(); // Verify successful connection\ncy.get(connected).should(\"not.be.empty\"); // Verify changed network details\n(0, _dashboard.nativeDetails)(0);",
              "err": {},
              "uuid": "42536830-fc5c-4837-928f-c1a6571c240f",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Transaction Buttons on Trade card",
              "fullTitle": "Swap Transaction Buttons on Trade card",
              "timedOut": null,
              "duration": 43014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard'); // Selecting swap side menu\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)();\ncy.wait(10000); // Tokens along balances in select tokens card\nfor (let i = 0; i <= 1; i++) {\n  cy.get(tokensToSwap).contains(swapTokensArr[i]).click();\n  cy.get(selectTokens).contains(swapTokensArr[i]).should('be.visible');\n  cy.get(selectTokensValue, {\n    timeout: 30000\n  }).should('not.be.empty');\n  cy.get(selectTokensMenuClose).eq(0).click();\n} // Enter an amount button\n\ncy.get(fromInput).should('have.attr', 'placeholder', '0.00');\ncy.get(toInput).should('have.attr', 'placeholder', '0.00');\ncy.get(swapBtn).contains(\"Enter an amount\").should('be.visible');\ncy.get(swapBtn).contains(\"Enter an amount\").should(\"have.css\", \"background-color\", \"rgb(229, 229, 229)\"); // Insufficient balance button\ncy.get(fromInput).type('100000');\ncy.wait(5000);\ncy.get(swapBtn).contains(\"Insufficient AVAX balance\").should('be.visible');\ncy.get(swapBtn).contains(\"Insufficient AVAX balance\").should(\"have.css\", \"background-color\", \"rgb(229, 229, 229)\");",
              "err": {},
              "uuid": "9d816535-7866-4ee8-93e6-31c1713f80e8",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify tokens with balance > 0 appear in the dropdown",
              "fullTitle": "Swap Verify tokens with balance > 0 appear in the dropdown",
              "timedOut": null,
              "duration": 32308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)();\nfor (let i = 0; i <= 1; i++) {\n  cy.get(tokensToSwap).eq(i).click();\n  cy.get(tokenBalances, {\n    timeout: 30000\n  }).each(option => {\n    cy.wrap(option).scrollIntoView().invoke('text').then(text => {\n      const balancePattern = /\\d+\\.\\d+/;\n      if (balancePattern.test(text)) {\n        cy.wrap(option).should('be.visible');\n      }\n    });\n  });\n  cy.get(selectTokensMenuClose).eq(0).click();\n}",
              "err": {},
              "uuid": "c83a641d-0f1e-4f06-80fb-87b1f825ea30",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Details on Trade card",
              "fullTitle": "Swap Details on Trade card",
              "timedOut": null,
              "duration": 95497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); // Select tokens by their titles\n(0, _swap.selectTokensftn)(\"Pangolin\", \"TetherToken\"); // Percent buttons\nfor (let i = 0; i <= 3; i++) {\n  cy.get(percentBtns).eq(percentBtnArr[i]).click();\n  cy.wait(10000);\n  cy.get(percentBtnActive).should($element => {\n    expect($element.css('color')).to.equal('rgb(255, 255, 255)');\n  });\n  cy.get(fromInput).should('not.have.value', '0.00');\n  cy.get(toInput).should('not.have.value', '0.00'); // See details by token names\n  (0, _swap.tradeDetailsftn)(\"PNG\", \"USDt\"); // Verify and approve if needed\n  cy.get(approveBtn, {\n    timeout: 30000\n  }).then($buttons => {\n    const approveButton = Cypress.$($buttons).filter((_, button) => {\n      const buttonText = Cypress.$(button).text().trim();\n      return buttonText.startsWith('Approve');\n    });\n    if (approveButton.length) {\n      // Token approval is required, perform approval process\n      cy.wrap(approveButton).click();\n      cy.wait(5000); // Wait for the approval process to complete\n      cy.confirmMetamaskPermissionToSpend();\n      cy.wait(10000);\n    }\n  }); // Swap button\n  cy.get(swapBtn, {\n    timeout: 30000\n  }).contains(\"Swap\").should('be.visible');\n  cy.get(swapBtn, {\n    timeout: 30000\n  }).contains(\"Swap\").should(\"have.css\", \"background-color\", \"rgb(255, 200, 0)\");\n}",
              "err": {},
              "uuid": "53179514-bbd2-497a-855c-c263f45957b3",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reject Transaction",
              "fullTitle": "Swap Reject Transaction",
              "timedOut": null,
              "duration": 75890,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)();\n(0, _swap.selectTokensftn)(\"Pangolin\", \"TetherToken\");\n(0, _swap.tradeDetailsftn)(\"PNG\", \"USDt\");\ncy.wait(15000); // Verify and approve if needed\ncy.get(approveBtn, {\n  timeout: 30000\n}).then($buttons => {\n  const approveButton = Cypress.$($buttons).filter((_, button) => {\n    const buttonText = Cypress.$(button).text().trim();\n    return buttonText.startsWith('Approve');\n  });\n  if (approveButton.length) {\n    // Token approval is required, perform approval process\n    cy.wrap(approveButton).click();\n    cy.wait(5000); // Wait for the approval process to complete\n    cy.confirmMetamaskPermissionToSpend();\n    cy.wait(10000); // Add assertions here to verify the approval process if needed\n  }\n}); // Swap button\ncy.get(swapBtn).contains(\"Swap\").should('be.visible');\ncy.get(swapBtn).click();\n(0, _swap.confirmTradeDetailsftn)(\"USDt\"); // Confirm swap button\n(0, _swap.confirmBtnftn)(confirmSwapBtn, \"Confirm Swap\");\ncy.wait(5000); // Reject transaction\ncy.rejectMetamaskTransaction();\ncy.get(transactionRejected).contains(\"Transaction rejected.\").should('be.visible'); // Dismiss button\n(0, _swap.confirmBtnftn)(confirmSwapBtn, \"Dismiss\");\ncy.get(confirmSwapDetails).contains(\"Trade\").should('be.visible'); // Swap button\ncy.get(swapBtn).contains(\"Swap\").should('be.visible');\ncy.get(swapBtn).contains(\"Swap\").should(\"have.css\", \"background-color\", \"rgb(255, 200, 0)\");",
              "err": {},
              "uuid": "e1eba68d-f42e-456e-b725-8058f93aa829",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Details on Confirm swap card",
              "fullTitle": "Swap Details on Confirm swap card",
              "timedOut": null,
              "duration": 140279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)();\n(0, _swap.selectTokensftn)(\"Pangolin\", \"TetherToken\");\n(0, _swap.tradeDetailsftn)(\"PNG\", \"USDt\");\ncy.wait(15000); // Verify and approve if needed\ncy.get(approveBtn, {\n  timeout: 30000\n}).then($buttons => {\n  const approveButton = Cypress.$($buttons).filter((_, button) => {\n    const buttonText = Cypress.$(button).text().trim();\n    return buttonText.startsWith('Approve');\n  });\n  if (approveButton.length) {\n    // Token approval is required, perform approval process\n    cy.wrap(approveButton).click();\n    cy.wait(5000); // Wait for the approval process to complete\n    cy.confirmMetamaskPermissionToSpend();\n    cy.wait(10000); // Add assertions here to verify the approval process if needed\n  }\n}); // Swap button\ncy.get(swapBtn).contains(\"Swap\").should('be.visible');\ncy.get(swapBtn).click(); // Details on confirmswap card\n(0, _swap.confirmTradeDetailsftn)(\"USDt\"); // Confirm swap button\n(0, _swap.confirmBtnftn)(confirmSwapBtn, \"Confirm Swap\"); // Swapping message\ncy.get(swappingMsg).invoke('text').should('match', /.*USDt.*/);\ncy.wait(10000);\ncy.confirmMetamaskTransaction();\ncy.wait(10000); // Notification\n(0, _swap.notificationftn)(\"USDt\"); // Successful card\ncy.wait(5000);\n(0, _swap.successfulCardftn)(confirmSwapBtn, swapSuccessfulTransactionLink); // Recent Transactions\ncy.get(walletAddress).contains('0xa0...b166').click();\ncy.get(recentTransactions).contains(\"Recent Transactions\").should('be.visible'); // Transaction Links\ncy.get(transactionLinks).each(page => {\n  cy.request(page.prop('href')).as('link');\n});\ncy.get('@link').should(response => {\n  expect(response.status).to.eq(200);\n}); // Clear all Transactions\ncy.get(clearAll).contains(\"(clear all)\").click();\ncy.get(transactionAppear).contains(\"Your transactions will appear here...\").should('be.visible');\ncy.get(accountMenuCloseSwap).click();",
              "err": {},
              "uuid": "38df1a37-16ab-46b6-8e66-5dcdc2c782f5",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Details on Limit Sell card",
              "fullTitle": "Swap Details on Limit Sell card",
              "timedOut": null,
              "duration": 60285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"0.001\", 0); //Sell token detaisl\n(0, _swap.limitSellBuyTradeDetailsftn)(); //On market price \ncy.get(swapBtn).contains(\"Only possible to place sell orders above market rate\").should('be.visible');\ncy.get(swapBtn).contains(\"Only possible to place sell orders above market rate\").should(\"have.css\", \"background-color\", \"rgb(229, 229, 229)\"); //Less than market price\n(0, _swap.limitSellBuyTokenftn)(0, 1);",
              "err": {},
              "uuid": "a25677ec-254b-46cd-9655-5eae0b50144c",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sell token Confirm card",
              "fullTitle": "Swap Sell token Confirm card",
              "timedOut": null,
              "duration": 92278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"0.001\", 0); //Less than market price\n(0, _swap.limitSellBuyTokenftn)(0, 1); //Placing the order\ncy.get(swapBtn).contains(\"Place Order\").click(); //confirm card\n(0, _swap.limitSellBuyConfirmDetailsftn)(\"PNG\", \"USDC\"); //Executing on higher limit price\ncy.get(confirmSwapBtn).contains(\"Confirm Order\").click();\ncy.get(swappingMsg).invoke('text').should('match', /\\bPNG\\b.*\\bUSDC\\b/);\ncy.wait(5000);\ncy.confirmMetamaskTransaction();\ncy.wait(3000); //Notification\n(0, _swap.notificationftn)(\"Sell order placed.\");\ncy.wait(5000); //Successful card\n(0, _swap.successfulCardftn)(confirmSwapBtn, limitSuccessfulTransactionLink);",
              "err": {},
              "uuid": "f0bd9ac4-9495-425b-8c86-b6ed7ebb67f3",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Details on Limit Buy card",
              "fullTitle": "Swap Details on Limit Buy card",
              "timedOut": null,
              "duration": 69488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"5\", 1); //buy token detaisl\n(0, _swap.limitSellBuyTradeDetailsftn)(); //On market price \ncy.get(swapBtn).contains(\"Only possible to place buy orders below market rate\").should('be.visible');\ncy.get(swapBtn).contains(\"Only possible to place buy orders below market rate\").should(\"have.css\", \"background-color\", \"rgb(229, 229, 229)\"); //Greater than the market price\n(0, _swap.limitSellBuyTokenftn)(1, 0);",
              "err": {},
              "uuid": "185ad615-475d-4144-a5c9-8b0d8d6178c4",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Buy token Confirm card",
              "fullTitle": "Swap Buy token Confirm card",
              "timedOut": null,
              "duration": 105870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"5\", 1); //Greater than the market price\n(0, _swap.limitSellBuyTokenftn)(1, 0); //Placing the order\ncy.get(swapBtn).contains(\"Place Order\").click(); //confirm card\n(0, _swap.limitSellBuyConfirmDetailsftn)(\"PNG\", \"USDC\"); //Executing on lower limit price\ncy.get(confirmSwapBtn).contains(\"Confirm Order\").click();\ncy.get(swappingMsg).invoke('text').should('match', /\\bPNG\\b.*\\bUSDC\\b/);\ncy.wait(5000);\ncy.confirmMetamaskTransaction();\ncy.wait(3000); //Notification\n(0, _swap.notificationftn)(\"Buy order placed.\");\ncy.wait(5000); // //Successful card\n(0, _swap.successfulCardftn)(confirmSwapBtn, limitSuccessfulTransactionLink);",
              "err": {},
              "uuid": "cc37c4ad-deda-48ce-bead-2a5fa3b5ca0e",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Limit Order section",
              "fullTitle": "Swap Limit Order section",
              "timedOut": null,
              "duration": 86375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Connect to MetaMask from swap page\ncy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"0.001\", 0); //Less than the market price\n(0, _swap.limitSellBuyTokenftn)(0, 1); //Placing the order\ncy.get(swapBtn).contains(\"Place Order\").click(); //Executing on higher limit price\ncy.get(confirmSwapBtn).contains(\"Confirm Order\").click();\ncy.wait(5000);\ncy.confirmMetamaskTransaction();\ncy.wait(3000); //Limit Orders OPEN\n(0, _swap.limitOrdersftn)(\"OPEN\", \"open\", \"PNG\", \"USDC\"); //Limit Orders EXECUTED \n//cy.get(buyBtn).contains(\"EXECUTED\").click()\n//limitOrdersftn(\"EXECUTED\",\"executed\", \"PNG\", \"USDC\")\n//Limit Orders CANCELLED \ncy.get(buyBtn).contains(\"CANCELLED\").click();\n(0, _swap.limitOrdersftn)(\"CANCELLED\", \"cancelled\", \"PNG\", \"USDC\");",
              "err": {},
              "uuid": "7a477be8-90a6-41ca-90c4-30b31cd6352a",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reject Cancelling Limit Order",
              "fullTitle": "Swap Reject Cancelling Limit Order",
              "timedOut": null,
              "duration": 155597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Connect to MetaMask from swap page\ncy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"0.001\", 0); //Less than the market price\n(0, _swap.limitSellBuyTokenftn)(0, 1); //Placing the order\ncy.get(swapBtn).contains(\"Place Order\").click(); //Executing on higher limit price\ncy.get(confirmSwapBtn).contains(\"Confirm Order\").click();\ncy.wait(5000);\ncy.confirmMetamaskTransaction();\ncy.wait(3000); //Cancel Limit Orders \n(0, _swap.cancelLimitOrderftn)(); //Reject transaction\ncy.wait(10000);\ncy.rejectMetamaskTransaction();\ncy.wait(5000);\ncy.get(confirmSwapBtn).contains(\"MetaMask Tx Signature: User denied transaction signature.\").should('be.visible').click();\ncy.wait(10000);\ncy.confirmMetamaskTransaction(); //Successful card\ncy.wait(5000);\n(0, _swap.successfulCardftn)(confirmSwapBtn, cancelLimitSuccessfulTransactionLink);",
              "err": {},
              "uuid": "42ece99a-006c-4509-9470-ce8b56ab26f6",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancelling the Limit order",
              "fullTitle": "Swap Cancelling the Limit order",
              "timedOut": null,
              "duration": 141959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Connect to MetaMask from swap page\ncy.visit('/dashboard');\ncy.get(swapSideMenu).click();\n(0, _dashboard.connectWalletftn)(); //Select limit tokens\n(0, _swap.selectLimitTokensftn)(\"PNG\", \"USDC\", \"0.001\", 0); //Less than the market price\n(0, _swap.limitSellBuyTokenftn)(0, 1); //Placing the order\ncy.get(swapBtn).contains(\"Place Order\").click(); //Executing on higher limit price\ncy.get(confirmSwapBtn).contains(\"Confirm Order\").click();\ncy.wait(5000);\ncy.confirmMetamaskTransaction();\ncy.wait(3000); //Cancel Limit Orders \n(0, _swap.cancelLimitOrderftn)(); //Reject transaction\ncy.wait(10000);\ncy.confirmMetamaskTransaction(); //Successful card\ncy.wait(10000);\n(0, _swap.successfulCardftn)(confirmSwapBtn, cancelLimitSuccessfulTransactionLink);",
              "err": {},
              "uuid": "d2f68b4e-aaf3-4a86-abb8-1bb64eae9b3d",
              "parentUUID": "026f98c3-92ee-48cf-b8bc-9ddfc77ef291",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42536830-fc5c-4837-928f-c1a6571c240f",
            "9d816535-7866-4ee8-93e6-31c1713f80e8",
            "c83a641d-0f1e-4f06-80fb-87b1f825ea30",
            "53179514-bbd2-497a-855c-c263f45957b3",
            "e1eba68d-f42e-456e-b725-8058f93aa829",
            "38df1a37-16ab-46b6-8e66-5dcdc2c782f5",
            "a25677ec-254b-46cd-9655-5eae0b50144c",
            "f0bd9ac4-9495-425b-8c86-b6ed7ebb67f3",
            "185ad615-475d-4144-a5c9-8b0d8d6178c4",
            "cc37c4ad-deda-48ce-bead-2a5fa3b5ca0e",
            "7a477be8-90a6-41ca-90c4-30b31cd6352a",
            "42ece99a-006c-4509-9470-ce8b56ab26f6",
            "d2f68b4e-aaf3-4a86-abb8-1bb64eae9b3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1161159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "tests\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}