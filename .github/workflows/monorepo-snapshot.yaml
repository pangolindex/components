name: Snapshot (Monorepo)

on:
  issue_comment:
    types:
      - created

concurrency: ${{ github.workflow }}-${{ github.ref }}

defaults:
 run:
  working-directory: ./monorepo

jobs:
  snapshot:
    name: Snapshot Release
    permissions:
      issues: write
      pull-requests: write
    if: |
      github.event.issue.pull_request &&
      (startsWith(github.event.comment.body, '/snapshot') || startsWith(github.event.comment.body, '/snapshot-release'))
    runs-on: ubuntu-latest
    steps:
      - name: Enforce permission requirement
        uses: prince-chrismc/check-actor-permissions-action@v1
        with:
          permission: write

      - name: Add initial reaction
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes

      - name: Validate pull request
        uses: actions/github-script@v6
        id: pr_data
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        with:
          script: |
            const eventData = context.payload;
            try {
              const pullRequest = await github.rest.pulls.get({
                  owner: eventData.repository.owner.login,
                  repo: eventData.repository.name,
                  pull_number: eventData.issue.number,
              })

              // Pull request from fork
              if (context.payload.repository.full_name !== pullRequest.data.head.repo.full_name) {
                const errorMessage = '`/snapshot` is not supported on pull requests from forked repositories.'

                await github.rest.issues.createComment({
                  issue_number: eventData.issue.number,
                  owner: eventData.repository.owner.login,
                  repo: eventData.repository.name,
                  body: errorMessage,
                })

                core.setFailed(errorMessage)
              }
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: Checkout default branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      # issue_comment requires us to checkout the branch
      # https://github.com/actions/checkout/issues/331#issuecomment-1120113003
      - name: Checkout pull request branch
        run: hub pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

      # Because changeset entries are consumed and removed on the
      # 'changeset-release/main' branch, we need to reset the files
      # so the following 'changeset version --snapshot' command will
      # regenerate the package version bumps with the snapshot releases
      - name: Reset changeset entries on changeset-release/main branch
        run: |
          if [[ $(git branch --show-current) == 'changeset-release/main' ]]; then
            git checkout origin/main -- .changeset
          fi

      - name: Free up space on GitHub image
        run: |
          # Based on the official advice:
          # https://github.com/actions/virtual-environments/issues/2840#issuecomment-790492173
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org/'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: yarn

      - name: Create an .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
      - name: Create and publish snapshot release
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        with:
          script: |
            const childProcesses = require("child_process");
            const util = require("util");
            const process = require("process");

            const execAsync = util.promisify(childProcesses.exec);
            const eventData = context.payload;

            process.chdir("./monorepo");

            try {
              // Synchronous execution with execSync
              childProcesses.execSync("yarn changeset version --snapshot internal", {
                stdio: "inherit",
              });

              // Asynchronous execution with await and execAsync
              const { stdout } = await execAsync(
                "yarn release -- --no-git-tags --tag internal"
              );

              const newTags = Array.from(stdout.matchAll(/New tag:\s+([^\s\n]+)/g)).map(
                ([_, tag]) => tag
              );

              if (newTags.length) {
                const multiple = newTags.length > 1;

                const body =
                  `ðŸ«°âœ¨ **Thanks @${context.actor}! ` +
                  `Your snapshot${
                    multiple ? "s have" : " has"
                  } been published to npm.**\n\n` +
                  `Test the snapshot${
                    multiple ? "s" : ""
                  } by updating your \`package.json\` ` +
                  `with the newly published version${multiple ? "s" : ""}:\n` +
                  newTags.map((tag) => "```sh\n" + `yarn add ${tag}\n` + "```").join("\n");
                await github.rest.issues.createComment({
                  issue_number: eventData.issue.number,
                  owner: eventData.repository.owner.login,
                  repo: eventData.repository.name,
                  body,
                });
              }
            } catch (error) {
              console.error(error);
            }
      - name: Add final reaction
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: rocket